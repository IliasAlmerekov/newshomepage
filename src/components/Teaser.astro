---
import type { SbBlokData } from '@storyblok/astro'
import '../styles/style.css'

export interface teaserItem {
  headline?: string,
  text?: string,
  link?: any,
}


export interface teaser {
  headline?: string,
  newsItems?: teaserItem[],
}

export interface Props {
  blok: SbBlokData & teaser
} 

const {blok} = Astro.props

---


<aside class="new-articles">
  <h2>{blok.headline}</h2>
  {
  blok.newsItems?.map((item) =>
  <div class="card">
    <h3><a href={item.link.url}>{item.headline}</a></h3>
    <p>{item.text}</p>
  </div>
)
  } 
</aside>

<style>
    .new-articles {
      display: flex;
      grid-column: span 4;
      flex-direction: column;
  background-color: var(--very-dark-blue);
  color:var( --off-white);
  padding: 20px;


h2 {
  color: var(--soft-orange);
  font-weight: 600;
  font-size: var(--fs-800);
  padding: 0;
  margin: 0;
}

.card {
  padding: 0;
  border-bottom: 1px solid var(--dark-grayish-blue);
}

.card:last-child {
  border-bottom: none;
}

h3 a{
  font-size: var(--fs-500);
  font-weight: bold;
  color: var(--off-white);
  cursor: pointer;
  text-decoration: none;
}
 h3 a:hover {
  font-size: var(--fs-500);
  font-weight: bold;
  color: var(--soft-orange);
}
 p {
  color:var(--dark-grayish-blue);
  font-size: var(--fs-400);
}

@media screen and (max-width: 475px) {
  
    display: flex;
    flex-direction: column;
    margin-top: 20px;
    gap: 15px;

 h2 {
  color: var(--soft-orange);
  font-weight: 600;
  font-size: var(--fs-700);
  padding: 0;
  margin: 0;
}
.card p {
  color:var(--dark-grayish-blue);
  font-size: 15px;
}
}
    }
</style>